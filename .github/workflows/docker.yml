name: Docker

on:
  schedule:
    - cron: '0 3 * * 3,6' # Every Wednesday and Saturday at 03:00 UTC
  push:
    branches:
      - main
    paths:
      - '.github/workflows/docker.yml'
      - 'Dockerfile'
      - 'tools/build-linux-release.sh'
  pull_request:
    paths:
      - '.github/workflows/docker.yml'
      - 'Dockerfile'
      - 'tools/build-linux-release.sh'
  workflow_call:
    inputs:
      tag:
        description: 'Docker tag'
        required: true
        type: string

permissions:
  contents: read
  packages: write

jobs:
  set-context:
    name: Set Context
    runs-on: ubuntu-24.04
    outputs:
      checkout-ref: ${{ steps.vars.outputs.checkout-ref }}
      docker-tag: ${{ steps.vars.outputs.docker-tag }}
      repository-lc: ${{ steps.vars.outputs.repository-lc }}
    steps:
    - name: Define variables
      id: vars
      run: |
        if [[ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "push" ]]; then
          {
            echo "checkout-ref=main"
            echo "docker-tag=latest"
          } >> "$GITHUB_OUTPUT"
        elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
          {
            echo "checkout-ref=pr"
            echo "docker-tag=pr-${{ github.event.pull_request.number }}"
          } >> "$GITHUB_OUTPUT"
        else
          {
            echo "checkout-ref=${{ inputs.tag }}"
            echo "docker-tag=${{ inputs.tag }}"
          } >> "$GITHUB_OUTPUT"
        fi
        echo "repository-lc=${REPOSITORY,,}" >> "$GITHUB_OUTPUT"
      env:
        REPOSITORY: ${{ github.repository }}

  build-amd64:
    name: Build AMD64 Image
    runs-on: ubuntu-24.04
    needs: set-context
    steps:
    - uses: actions/checkout@v4
      if: needs.set-context.outputs.checkout-ref == 'pr'
    - uses: actions/checkout@v4
      if: needs.set-context.outputs.checkout-ref != 'pr'
      with:
        ref: ${{ needs.set-context.outputs.checkout-ref }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub registry
      uses: docker/login-action@v3
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
    - name: Build and push AMD64 image
      uses: docker/build-push-action@v6
      with:
        context: .
        tags: ghcr.io/${{ needs.set-context.outputs.repository-lc }}:${{ needs.set-context.outputs.docker-tag }}-amd64
        platforms: linux/amd64
        outputs: type=registry
        cache-from: type=gha,scope=amd64
        cache-to: type=gha,mode=max,scope=amd64

  build-arm64:
    name: Build ARM64 Image
    runs-on: ubuntu-24.04-arm
    needs: set-context
    steps:
    - uses: actions/checkout@v4
      if: needs.set-context.outputs.checkout-ref == 'pr'
    - uses: actions/checkout@v4
      if: needs.set-context.outputs.checkout-ref != 'pr'
      with:
        ref: ${{ needs.set-context.outputs.checkout-ref }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub registry
      uses: docker/login-action@v3
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
    - name: Build and push ARM64 image
      uses: docker/build-push-action@v6
      with:
        context: .
        tags: ghcr.io/${{ needs.set-context.outputs.repository-lc }}:${{ needs.set-context.outputs.docker-tag }}-arm64
        platforms: linux/arm64
        outputs: type=registry
        cache-from: type=gha,scope=arm64
        cache-to: type=gha,mode=max,scope=arm64

  create-manifest:
    name: Create Multi-Platform Manifest
    runs-on: ubuntu-24.04
    needs:
      - set-context
      - build-amd64
      - build-arm64
    steps:
    - name: Login to GitHub registry
      uses: docker/login-action@v3
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
    - name: Create and push manifest
      run: |
        docker buildx imagetools create -t ghcr.io/${{ needs.set-context.outputs.repository-lc }}:${{ needs.set-context.outputs.docker-tag }} \
          ghcr.io/${{ needs.set-context.outputs.repository-lc }}:${{ needs.set-context.outputs.docker-tag }}-amd64 \
          ghcr.io/${{ needs.set-context.outputs.repository-lc }}:${{ needs.set-context.outputs.docker-tag }}-arm64
