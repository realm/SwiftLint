trigger:
- main

variables:
  CI: 'true'

jobs:
- job: spm_linux
  displayName: 'SPM, Linux : Swift 6'
  pool:
    vmImage: 'ubuntu-24.04' # "Noble Numbat"
  container: swift:6.0-noble
  steps:
    - displayName: Run tests
      script: swift test --parallel -Xswiftc -DDISABLE_FOCUSED_EXAMPLES

- job: bazel_linux
  displayName: 'Bazel, Linux : Swift 6'
  pool:
    vmImage: 'ubuntu-24.04'
  steps:
    - displayName: Build SwiftLint
      script: |
        export PATH="/usr/share/swift/usr/bin:$PATH"
        git apply --ignore-whitespace .bcr/patches/no-warnings-as-errors.patch
        bazel build :swiftlint
      env:
        CC: "clang"

- job: tests_macos
  displayName: 'Tests, macOS'
  strategy:
    maxParallel: '10'
    matrix:
      '14 : Xcode 15.4':
        image: 'macOS-14'
        xcode: '15.4'
      # '14 : Xcode 16.2': Runs on Buildkite.
      '15 : Xcode 15.4':
        image: 'macOS-15'
        xcode: '15.4'
      '15 : Xcode 16.2':
        image: 'macOS-15'
        xcode: '16.2'
  pool:
    vmImage: $(image)
  variables:
    DEVELOPER_DIR: /Applications/Xcode_$(xcode).app
  steps:
    - displayName: Run tests
      script: swift test --parallel -Xswiftc -DDISABLE_FOCUSED_EXAMPLES

- job: plugins_linux # Plugins shall be able to run on older Swift versions.
  displayName: 'Plugins, Linux'
  pool:
    vmImage: 'ubuntu-24.04' # "Noble Numbat"
  strategy:
    maxParallel: '10'
    matrix:
      ': Swift 5.9':
        image: swift:5.9-focal
      ': Swift 5.10':
        image: swift:5.10-noble
      ': Swift 6':
        image: swift:6.0-noble
  container: $[ variables['image'] ]
  steps:
    - displayName: Build command plugin
      script: swift build -c release --product SwiftLintCommandPlugin
    - displayName: Build tool plugin
      script: swift build -c release --product SwiftLintBuildToolPlugin

- job: CocoaPods
  pool:
    vmImage: 'macOS-14'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_16.1.app
  steps:
    - displayName: Install bundles
      script: bundle install --path vendor/bundle
    - displayName: Update Pod repo
      script: bundle exec pod repo update
    - displayName: Lint Podspec for macOS
      script: bundle exec pod lib lint --platforms=macos --verbose

- job: Jazzy
  pool:
    vmImage: 'macOS-14'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_15.4.app
  steps:
    - displayName: Generate docs
      script: swift run swiftlint generate-docs
    - displayName: Install Jazzy
      script: bundle install --path vendor/bundle
    - displayName: Run Jazzy
      script: bundle exec jazzy
    - displayName: Validate documentation coverage
      script: >
        if ruby -rjson -e "j = JSON.parse(File.read('docs/undocumented.json')); exit j['warnings'].length != 0"; then
          echo "Undocumented declarations:"
          cat docs/undocumented.json
          exit 1
        fi
    - displayName: Publish documentation
      task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'API Docs'
        targetPath: 'docs'
    - displayName: Download secure file
      task: DownloadSecureFile@1
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
      inputs:
        secureFile: doc_deploy_key
    - displayName: Publish
      script: ./tools/push-docs
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
